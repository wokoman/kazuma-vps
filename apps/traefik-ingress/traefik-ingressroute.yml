---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: argocd-server
  namespace: argocd
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`argocd.michalkozak.cz`)
      kind: Rule
      services:
        - name: argocd-server
          port: 80
    - match: Host(`argocd.michalkozak.cz`) && Headers(`Content-Type`, `application/grpc`)
      kind: Rule
      services:
        - name: argocd-server
          port: 80
          scheme: h2c
  tls:
    certResolver: letsencrypt
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: miniflux
  namespace: miniflux
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`miniflux.michalkozak.cz`)
      services:
        - name: miniflux
          namespace: miniflux
          port: 8080
  tls:
    certResolver: letsencrypt
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: website
  namespace: website
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`michalkozak.cz`,`www.michalkozak.cz`)
      services:
        - name: website
          namespace: website
          port: 80
  tls:
    certResolver: letsencrypt
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: traefik-dashboard
#   namespace: traefik
# spec:
#   entryPoints:
#     - traefik
#   routes:
#     - kind: Rule
#       match: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
#       services:
#         - kind: TraefikService
#           name: api@internal
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: traefik-dashboard-tls
#   namespace: default
# spec:
#   routes:
#     - match: Host(`kazuma.michalkozak.cz`)
#       kind: Rule
#       services:
#         - name: api@internal
#           kind: TraefikService
#       middlewares:
#         - name: basic-auth
#         - name: security
#   tls:
#     certResolver: letsencrypt
